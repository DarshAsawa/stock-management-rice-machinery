-- Database: flour_mill_erp
-- CREATE DATABASE IF NOT EXISTS flour_mill_erp;
-- USE flour_mill_erp;

-- Table: parties (Party Master)
CREATE TABLE IF NOT EXISTS parties (
    id INT AUTO_INCREMENT PRIMARY KEY,
    party_code VARCHAR(50) UNIQUE NOT NULL,
    party_name VARCHAR(255) NOT NULL,
    gst_number VARCHAR(15),
    address TEXT,
    city VARCHAR(100),
    bank_account VARCHAR(50),
    bank_name VARCHAR(255),
    ifsc_code VARCHAR(11),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255) -- To track which user created/updated the record
);

-- Table: item_categories (Item Category)
CREATE TABLE IF NOT EXISTS item_categories (
    id INT AUTO_INCREMENT PRIMARY KEY,
    category_name VARCHAR(255) UNIQUE NOT NULL,
    description1 VARCHAR(255), -- e.g., PRODUCT
    description2 VARCHAR(255), -- e.g., PLY
    description3 VARCHAR(255), -- e.g., LENGTH
    description4 VARCHAR(255), -- e.g., WIDTH
    description5 VARCHAR(255), -- e.g., HEIGHT
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255)
);

-- Table: items (Item Master)
CREATE TABLE IF NOT EXISTS items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    item_code VARCHAR(50) UNIQUE NOT NULL,
    category_id INT NOT NULL, -- Foreign key to item_categories
    description1 VARCHAR(255),
    description2 VARCHAR(255),
    description3 VARCHAR(255),
    description4 VARCHAR(255),
    description5 VARCHAR(255),
    full_description TEXT NOT NULL, -- Concatenated description
    stock INT NOT NULL DEFAULT 0,
    min_level INT NOT NULL DEFAULT 0,
    unit_rate DECIMAL(10, 2) NOT NULL DEFAULT 0.00,
    rack_bin VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255),
    FOREIGN KEY (category_id) REFERENCES item_categories(id) ON DELETE RESTRICT
);

-- Table: gate_inwards (Gate Inward)
CREATE TABLE IF NOT EXISTS gate_inwards (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bill_no VARCHAR(100) NOT NULL,
    bill_date DATE NOT NULL,
    supplier_id INT NOT NULL, -- Foreign key to parties
    grn_number VARCHAR(100) NOT NULL,
    grn_date DATE NOT NULL,
    payment_terms TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255),
    FOREIGN KEY (supplier_id) REFERENCES parties(id) ON DELETE RESTRICT
);

-- Table: gate_inward_items (Details for Gate Inward)
CREATE TABLE IF NOT EXISTS gate_inward_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    gate_inward_id INT NOT NULL, -- Foreign key to gate_inwards
    item_id INT NOT NULL, -- Foreign key to items
    unit_rate DECIMAL(10, 2) NOT NULL,
    uom VARCHAR(50), -- Unit of Measurement
    quantity INT NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    remark TEXT,
    FOREIGN KEY (gate_inward_id) REFERENCES gate_inwards(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE RESTRICT
);

-- Table: issue_notes_internal (Issue Note - Internal)
CREATE TABLE IF NOT EXISTS issue_notes_internal (
    id INT AUTO_INCREMENT PRIMARY KEY,
    department VARCHAR(255) NOT NULL,
    issue_no VARCHAR(100) NOT NULL,
    issue_date DATE NOT NULL,
    issued_by VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255)
);

-- Table: issue_note_internal_items (Details for Issue Note - Internal)
CREATE TABLE IF NOT EXISTS issue_note_internal_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    issue_note_id INT NOT NULL, -- Foreign key to issue_notes_internal
    item_id INT NOT NULL, -- Foreign key to items
    unit_rate DECIMAL(10, 2) NOT NULL,
    uom VARCHAR(50),
    quantity INT NOT NULL,
    remark TEXT,
    FOREIGN KEY (issue_note_id) REFERENCES issue_notes_internal(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE RESTRICT
);

-- Table: inward_internals (Inward - Internal)
CREATE TABLE IF NOT EXISTS inward_internals (
    id INT AUTO_INCREMENT PRIMARY KEY,
    receipt_no VARCHAR(100) NOT NULL,
    received_date DATE NOT NULL,
    received_by VARCHAR(255) NOT NULL,
    department VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255)
);

-- Table: inward_internal_finished_goods (Finished Goods details for Inward - Internal)
CREATE TABLE IF NOT EXISTS inward_internal_finished_goods (
    id INT AUTO_INCREMENT PRIMARY KEY,
    inward_internal_id INT NOT NULL, -- Foreign key to inward_internals
    item_id INT NOT NULL, -- Foreign key to items (should be a finished good)
    unit_rate DECIMAL(10, 2) NOT NULL,
    uom VARCHAR(50),
    quantity INT NOT NULL,
    remark TEXT,
    FOREIGN KEY (inward_internal_id) REFERENCES inward_internals(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE RESTRICT
);

-- Table: inward_internal_materials_used (Materials Used details for Inward - Internal)
CREATE TABLE IF NOT EXISTS inward_internal_materials_used (
    id INT AUTO_INCREMENT PRIMARY KEY,
    inward_internal_id INT NOT NULL, -- Foreign key to inward_internals
    item_id INT NOT NULL, -- Foreign key to items (should be a raw material)
    unit_rate DECIMAL(10, 2) NOT NULL,
    uom VARCHAR(50),
    quantity INT NOT NULL,
    remark TEXT,
    FOREIGN KEY (inward_internal_id) REFERENCES inward_internals(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE RESTRICT
);

-- Table: outward_challans (Outward Challan / Dispatch Note)
CREATE TABLE IF NOT EXISTS outward_challans (
    id INT AUTO_INCREMENT PRIMARY KEY,
    party_id INT NOT NULL, -- Foreign key to parties
    challan_no VARCHAR(100) NOT NULL,
    challan_date DATE NOT NULL,
    transport VARCHAR(255),
    lr_no VARCHAR(100),
    remark TEXT, -- Header remark
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    user_id VARCHAR(255),
    FOREIGN KEY (party_id) REFERENCES parties(id) ON DELETE RESTRICT
);

-- Table: outward_challan_items (Details for Outward Challan)
CREATE TABLE IF NOT EXISTS outward_challan_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    outward_challan_id INT NOT NULL, -- Foreign key to outward_challans
    item_id INT NOT NULL, -- Foreign key to items (should be a finished good)
    value_of_goods_uom VARCHAR(50),
    quantity INT NOT NULL,
    remark TEXT,
    FOREIGN KEY (outward_challan_id) REFERENCES outward_challans(id) ON DELETE CASCADE,
    FOREIGN KEY (item_id) REFERENCES items(id) ON DELETE RESTRICT
);
